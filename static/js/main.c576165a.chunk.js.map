{"version":3,"sources":["assets/homePageLogo.png","pages/Home.jsx","assets/logo.svg","constants/path.js","components/navigation/Navigation.jsx","components/productImage/ProductImage.jsx","assets/shoppingCart.svg","constants/api.js","request/httpClient.js","modules/shoppingCart.js","components/productListItem/ProductListItem.jsx","pages/ProductList.jsx","constants/color.js","components/button/Button.jsx","components/checkbox/Checkbox.jsx","components/pageTitle/PageTitle.jsx","components/textHighlight/TextHighlight.jsx","components/paymentAmount/PaymentAmount.jsx","components/selectedProductList/SelectedProductList.jsx","assets/trashCan.svg","assets/upArrow.svg","assets/downArrow.svg","components/countInput/CountInput.jsx","DialogPortal.js","components/dialog/Dialog.jsx","hooks/useDialog.jsx","components/shoppingCartItem/ShoppingCartItem.jsx","assets/empty-cart.png","pages/ShoppingCart.jsx","components/orderListItem/OrderListItem.jsx","pages/OrderList.jsx","GlobalStyle.js","modules/orderList.js","pages/OrderPayment.jsx","modules/product.js","pages/OrderListDetail.jsx","pages/ProductDetail.jsx","App.js","modules/index.js","index.js"],"names":["HomeImage","styled","img","Home","src","homePageLogo","height","weight","alt","PATH","Container","div","Content","nav","Logo","ul","Menu","Navigation","to","logo","width","PRODUCT_IMAGE_TYPE","Object","freeze","LARGE","MEDIUM","SMALL","productImageStyle","Image","type","ProductImage","API_PATH","API_METHOD","RETURN_TYPE","request","a","path","body","method","returnType","fetch","fetchOptions","response","ok","Error","text","headers","JSON","stringify","httpClient","INSERT_SHOPPING_CART_ITEM","DELETE_SHOPPING_CART_ITEM","DELETE_CHECKED_SHOPPING_CART_LIST","FETCH_SHOPPING_CART_LIST","TOGGLE_SHOPPING_CART_ITEM","TOGGLE_ALL_SHOPPING_CART_ITEM","INCREASE_COUNT","DECREASE_COUNT","initialState","shoppingCartList","isAllShoppingCartItemChecked","shoppingCart","state","action","payload","filter","shoppingCartItem","id","isChecked","changedShoppingCartList","map","length","count","Name","Price","ProductListItem","product","dispatch","useDispatch","name","price","toLocaleString","onClick","console","error","insertShoppingCartItem","shoppingCartImg","ProductList","productList","useSelector","COLOR","BUTTON_TYPE","X_SMALL","buttonStyle","fontSize","fontWeight","backgroundColor","color","border","button","disabled","styles","Button","children","defaultProps","CheckIcon","svg","CheckboxShapeDiv","HiddenCheckboxInput","input","attrs","Text","span","Checkbox","onChange","checked","viewBox","points","PageTitle","TextHighlight","PAYMENT_AMOUNT_TYPE","SHOPPING_CART","ORDER_PAYMENT","paymentAmountText","title","content","Title","TextWrapper","getButtonText","PaymentAmount","marginLeft","SELECTED_PRODUCT_LIST_TYPE","ORDER_LIST","selectedProductStyle","Header","paddingBottom","borderBottom","ListItemWrapper","padding","display","justifyContent","li","getHeader","orderNumber","SelectedProductList","listType","itemType","ListItem","NumberInput","ButtonWrapper","StyledButton","Increment","Decrement","CountInput","value","onIncrease","onDecrease","upArrow","downArrow","DialogPortal","ReactDOM","createPortal","document","getElementById","DIALOG_TYPE","ALERT","CONFIRM","section","CancelButton","ConfirmButton","getButton","onConfirm","onCancel","Dialog","useDialog","useState","isDialogOpen","setIsDialogOpen","setType","clickConfirm","callback","clickCancel","LeftContent","RightContent","TrashCanImage","ShoppingCartItem","handleConfirm","shoppingCartItemId","bind","trashCan","ImageWrapper","EmptyCartImage","EmptyCartText","ShoppingCartItemModification","PaymentAmountWrapper","ShoppingCart","history","useHistory","checkedShoppingCartList","item","totalPrice","reduce","acc","cur","getExpectedPaymentAmount","push","orderPaymentList","Promise","all","deleteCheckedShoppingCartList","emptyCart","marginTop","ORDER_LIST_ITEM_TYPE","orderListItemStyle","Info","getInfo","getFloatingButton","style","OrderListItem","OrderItemListWrapper","OrderList","orderItemList","orderList","orderItem","itemList","GlobalStyle","createGlobalStyle","FETCH_ORDER_ITEM_LIST","INSERT_ORDER_ITEM_LIST","insertOrderItemList","orderItemData","Date","getTime","reverse","OrderPaymentAmountWrapper","OrderPayment","useLocation","handleOrderListPageRouter","FETCH_PRODUCT_LIST","OrderListDetail","ProductDetail","StyledContents","App","useEffect","exact","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.c576165a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/homePageLogo.1afee904.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport homePageLogo from '../assets/homePageLogo.png';\n\nconst HomeImage = styled.img`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n`;\n\nconst Home = () => {\n  return (\n    <div>\n      <HomeImage src={homePageLogo} height=\"200px\" weight=\"200px\" alt=\"main-logo\" />\n    </div>\n  );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/logo.9cc4e339.svg\";","export const PATH = {\n  HOME: '/',\n  PRODUCT_LIST: '/productList',\n  PRODUCT_DETAIL: '/productDetail',\n  SHOPPING_CART: '/shoppingCart',\n  ORDER_PAYMENT: '/orderPayment',\n  ORDER_LIST: '/orderList',\n  ORDER_LIST_DETAIL: '/orderListDetail',\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport logo from '../../assets/logo.svg';\nimport { PATH } from '../../constants/path';\n\nconst Container = styled.div`\n  background-color: #2ac1bc;\n  box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.5);\n`;\n\nconst Content = styled.nav`\n  display: flex;\n  max-width: 1440px;\n  height: 60px;\n  margin: 0 auto;\n  padding: 0 60px;\n  justify-content: space-between;\n`;\n\nconst Logo = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Menu = styled.ul`\n  display: flex;\n  width: 280px;\n  justify-content: space-between;\n  align-items: center;\n  color: #ffffff;\n`;\n\nconst Navigation = () => (\n  <Container>\n    <Content>\n      <Logo>\n        <li>\n          <Link to={PATH.HOME}>\n            <img src={logo} width=\"80%\" height=\"80%\" alt=\"메인 로고\" />\n          </Link>\n        </li>\n      </Logo>\n      <Menu>\n        <li>\n          <Link to={PATH.PRODUCT_LIST}>상품목록</Link>\n        </li>\n        <li>\n          <Link to={PATH.SHOPPING_CART}>장바구니</Link>\n        </li>\n        <li>\n          <Link to={PATH.ORDER_LIST}>주문목록</Link>\n        </li>\n      </Menu>\n    </Content>\n  </Container>\n);\n\nexport default Navigation;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nexport const PRODUCT_IMAGE_TYPE = Object.freeze({\n  LARGE: 'LARGE',\n  MEDIUM: 'MEDIUM',\n  SMALL: 'SMALL',\n});\n\nconst productImageStyle = {\n  LARGE: {\n    width: '570px',\n    height: '570px',\n  },\n  MEDIUM: {\n    width: '282px',\n    height: '282px',\n  },\n  SMALL: {\n    width: '144px',\n    height: '144px',\n  },\n};\n\nconst Image = styled.img`\n  ${({ type }) => productImageStyle[type] || productImageStyle[PRODUCT_IMAGE_TYPE.MEDIUM]}\n`;\n\n// defaultProps로 src가 들어오지 않았을 때 해당 상품이 없다는 이미지를 띄워주기\nconst ProductImage = ({ type, src, alt }) => <Image type={type} src={src} alt={alt} />;\n\nProductImage.propTypes = {\n  type: PropTypes.string,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n\nexport default ProductImage;\n","export default __webpack_public_path__ + \"static/media/shoppingCart.0d00cd31.svg\";","export const API_END_POINT = 'https://react-shopping-cart-jum0.herokuapp.com';\n\nexport const API_PATH = {\n  PRODUCT_LIST: '/productList',\n  SHOPPING_CART_LIST: '/shoppingCartList',\n  ORDER_ITEM_LIST: '/orderItemList',\n};\n\nexport const API_METHOD = {\n  GET: 'GET',\n  POST: 'POST',\n  DELETE: 'DELETE',\n};\n\nexport const RETURN_TYPE = {\n  JSON: 'json',\n};\n","import { API_END_POINT, API_METHOD } from '../constants/api';\n\nconst request = async ({ path, body, method, returnType }) => {\n  const response = await fetch(`${API_END_POINT}${path}`, fetchOptions({ method, body }));\n\n  if (!response.ok) {\n    throw new Error(await response.text());\n  }\n\n  if (returnType) {\n    return await response[returnType]();\n  }\n};\n\nconst fetchOptions = ({ method, body }) => ({\n  method,\n  headers: { 'Content-type': 'application/json; charset=UTF-8' },\n  body: body && JSON.stringify(body),\n});\n\nexport const httpClient = {\n  get: ({ path, returnType }) => request({ path, method: API_METHOD.GET, returnType }),\n  post: ({ path, body, returnType }) => request({ path, body, method: API_METHOD.POST, returnType }),\n  delete: ({ path, body, returnType }) => request({ path, body, method: API_METHOD.DELETE, returnType }),\n};\n","import { API_PATH, RETURN_TYPE } from '../constants/api';\nimport { httpClient } from '../request/httpClient';\n\nconst INSERT_SHOPPING_CART_ITEM = 'shoppingCart/INSERT_SHOPPING_CART_ITEM';\nconst DELETE_SHOPPING_CART_ITEM = 'shoppingCart/DELETE_SHOPPING_CART_ITEM';\nconst DELETE_CHECKED_SHOPPING_CART_LIST = 'shoppingCart/DELETE_CHECKED_SHOPPING_CART_LIST';\nconst FETCH_SHOPPING_CART_LIST = 'shoppingCart/FETCH_SHOPPING_CART_LIST';\nconst TOGGLE_SHOPPING_CART_ITEM = 'shoppingCart/TOGGLE_SHOPPING_CART_ITEM';\nconst TOGGLE_ALL_SHOPPING_CART_ITEM = 'shoppingCart/TOGGLE_ALL_SHOPPING_CART_ITEM';\nconst INCREASE_COUNT = 'shoppingCart/INCREASE_COUNT';\nconst DECREASE_COUNT = 'shoppingCart/DECREASE_COUNT';\n\nexport const insertShoppingCartItem = (shoppingCartItem) => async (dispatch) => {\n  try {\n    await httpClient.post({ path: API_PATH.SHOPPING_CART_LIST, body: shoppingCartItem });\n\n    dispatch({ type: INSERT_SHOPPING_CART_ITEM, payload: shoppingCartItem });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const deleteShoppingCartItem = (shoppingCartItemId) => async (dispatch) => {\n  try {\n    await httpClient.delete({ path: `${API_PATH.SHOPPING_CART_LIST}/${shoppingCartItemId}` });\n\n    dispatch({ type: DELETE_SHOPPING_CART_ITEM, payload: shoppingCartItemId });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const deleteCheckedShoppingCartList = (checkedShoppingCartList) => async (dispatch) => {\n  try {\n    await Promise.all(\n      checkedShoppingCartList.map(({ id }) => httpClient.delete({ path: `${API_PATH.SHOPPING_CART_LIST}/${id}` }))\n    );\n\n    dispatch({ type: DELETE_CHECKED_SHOPPING_CART_LIST });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchShoppingCartList = () => async (dispatch) => {\n  try {\n    const shoppingCartList = await httpClient.get({ path: API_PATH.SHOPPING_CART_LIST, returnType: RETURN_TYPE.JSON });\n\n    dispatch({ type: FETCH_SHOPPING_CART_LIST, payload: shoppingCartList });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const toggleShoppingCartItem = (shoppingCartItemId) => ({\n  type: TOGGLE_SHOPPING_CART_ITEM,\n  payload: shoppingCartItemId,\n});\n\nexport const toggleAllShoppingCartItem = () => ({\n  type: TOGGLE_ALL_SHOPPING_CART_ITEM,\n});\n\nexport const increaseCount = (shoppingCartItemId) => ({\n  type: INCREASE_COUNT,\n  payload: shoppingCartItemId,\n});\n\nexport const decreaseCount = (shoppingCartItemId) => ({\n  type: DECREASE_COUNT,\n  payload: shoppingCartItemId,\n});\n\nconst initialState = {\n  shoppingCartList: [],\n  isAllShoppingCartItemChecked: true,\n};\n\nconst shoppingCart = (state = initialState, action) => {\n  switch (action.type) {\n    case INSERT_SHOPPING_CART_ITEM:\n      return {\n        ...state,\n        shoppingCartList: [...state.shoppingCartList, action.payload],\n      };\n    case DELETE_SHOPPING_CART_ITEM:\n      return {\n        ...state,\n        shoppingCartList: state.shoppingCartList.filter((shoppingCartItem) => shoppingCartItem.id !== action.payload),\n      };\n    case DELETE_CHECKED_SHOPPING_CART_LIST:\n      return {\n        ...state,\n        shoppingCartList: state.shoppingCartList.filter((shoppingCartItem) => !shoppingCartItem.isChecked),\n      };\n    case FETCH_SHOPPING_CART_LIST: {\n      return {\n        ...state,\n        shoppingCartList: action.payload,\n      };\n    }\n    case TOGGLE_SHOPPING_CART_ITEM: {\n      const changedShoppingCartList = state.shoppingCartList.map((shoppingCartItem) => {\n        if (shoppingCartItem.id === action.payload) {\n          return {\n            ...shoppingCartItem,\n            isChecked: !shoppingCartItem.isChecked,\n          };\n        }\n\n        return shoppingCartItem;\n      });\n\n      const isAllShoppingCartItemChecked =\n        changedShoppingCartList.length ===\n        changedShoppingCartList.filter((shoppingCartItem) => shoppingCartItem.isChecked).length;\n\n      return {\n        ...state,\n        shoppingCartList: changedShoppingCartList,\n        isAllShoppingCartItemChecked,\n      };\n    }\n    case TOGGLE_ALL_SHOPPING_CART_ITEM: {\n      return {\n        ...state,\n        shoppingCartList: state.shoppingCartList.map((shoppingCartItem) => ({\n          ...shoppingCartItem,\n          isChecked: !state.isAllShoppingCartItemChecked,\n        })),\n        isAllShoppingCartItemChecked: !state.isAllShoppingCartItemChecked,\n      };\n    }\n    case INCREASE_COUNT: {\n      return {\n        ...state,\n        shoppingCartList: state.shoppingCartList.map((shoppingCartItem) => {\n          if (shoppingCartItem.id === action.payload) {\n            return {\n              ...shoppingCartItem,\n              count: shoppingCartItem.count + 1,\n            };\n          }\n          return shoppingCartItem;\n        }),\n      };\n    }\n    case DECREASE_COUNT: {\n      return {\n        ...state,\n        shoppingCartList: state.shoppingCartList.map((shoppingCartItem) => {\n          if (shoppingCartItem.id === action.payload) {\n            return {\n              ...shoppingCartItem,\n              count: shoppingCartItem.count - 1,\n            };\n          }\n          return shoppingCartItem;\n        }),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default shoppingCart;\n","import React from 'react';\nimport ProductImage, { PRODUCT_IMAGE_TYPE } from '../productImage/ProductImage';\nimport shoppingCartImg from '../../assets/shoppingCart.svg';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { insertShoppingCartItem } from '../../modules/shoppingCart';\nimport PropTypes from 'prop-types';\n\nconst Content = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 12px 4px 12px;\n`;\n\nconst Name = styled.div`\n  letter-spacing: 0.5px;\n  line-height: 22px;\n`;\n\nconst Price = styled.div`\n  font-size: 20px;\n  margin-top: 3px;\n  letter-spacing: 0.5px;\n  line-height: 27px;\n`;\n\nconst Image = styled.img`\n  cursor: pointer;\n`;\n\nconst ProductListItem = ({ product }) => {\n  const dispatch = useDispatch();\n\n  const handleShoppingCartImage = () => {\n    const shoppingCartItem = { ...product, isChecked: true, count: 1 };\n\n    dispatch(insertShoppingCartItem(shoppingCartItem));\n  };\n\n  return (\n    <div>\n      <ProductImage type={PRODUCT_IMAGE_TYPE.MEDIUM} src={product.src} alt={product.alt} />\n      <Content>\n        <li>\n          <Name>{product.name}</Name>\n          <Price>{product.price.toLocaleString('ko-KR')} 원</Price>\n        </li>\n        <li>\n          <Image onClick={handleShoppingCartImage} src={shoppingCartImg} alt=\"장바구니\" />\n        </li>\n      </Content>\n    </div>\n  );\n};\n\nProductListItem.propTypes = {\n  product: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default ProductListItem;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport ProductListItem from '../components/productListItem/ProductListItem';\n\nconst Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 282px);\n  column-gap: 60px;\n  row-gap: 28px;\n`;\n\nconst ProductList = () => {\n  const productList = useSelector((state) => state.product.productList);\n\n  return (\n    <Container>\n      {productList.map((product) => (\n        <li key={product.id}>\n          <ProductListItem product={product} />\n        </li>\n      ))}\n    </Container>\n  );\n};\n\nexport default ProductList;\n","export const COLOR = {\n  MINT_500: '#2AC1BC',\n  BROWN_500: '#73675C',\n  WHITE: '#FFFFFF',\n  GRAY_200: '#DDDDDD',\n  GRAY_300: '#BBBBBB',\n  GRAY_400: '#AAAAAA',\n  GRAY_600: '#888888',\n  GRAY_800: '#333333',\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { COLOR } from '../../constants/color';\nimport PropTypes from 'prop-types';\n\nexport const BUTTON_TYPE = Object.freeze({\n  LARGE: 'LARGE',\n  MEDIUM: 'MEDIUM',\n  SMALL: 'SMALL',\n  X_SMALL: 'X_SMALL',\n});\n\nconst buttonStyle = {\n  LARGE: {\n    width: '638px',\n    height: '98px',\n    fontSize: '32px',\n    fontWeight: '500',\n    backgroundColor: COLOR.BROWN_500,\n    color: COLOR.WHITE,\n  },\n  MEDIUM: {\n    width: '388px',\n    height: '73px',\n    fontSize: '24px',\n    backgroundColor: COLOR.MINT_500,\n    color: COLOR.WHITE,\n  },\n  SMALL: {\n    width: '138px',\n    height: '47px',\n    fontSize: '20px',\n    backgroundColor: COLOR.MINT_500,\n    color: COLOR.WHITE,\n  },\n  X_SMALL: {\n    width: '117px',\n    height: '50px',\n    backgroundColor: COLOR.WHITE,\n    border: `1px solid ${COLOR.GRAY_300}`,\n  },\n};\n\nconst Container = styled.button`\n  text-align: center;\n  border: none;\n  cursor: ${({ disabled }) => (disabled ? 'unset' : 'pointer')};\n  color: ${({ disabled }) => (disabled ? COLOR.GRAY_300 : 'inherit')};\n\n  ${({ type }) => buttonStyle[type] || buttonStyle[BUTTON_TYPE.MEDIUM]};\n  ${({ styles }) => styles};\n`;\n\nconst Button = ({ children, type, styles, disabled, onClick }) => (\n  <Container type={type} styles={styles} disabled={disabled} onClick={onClick}>\n    {children}\n  </Container>\n);\n\nButton.defaultProps = {\n  type: BUTTON_TYPE.MEDIUM,\n  disabled: false,\n};\n\nButton.propTypes = {\n  children: PropTypes.string,\n  type: PropTypes.string,\n  styles: PropTypes.object,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Content = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`;\n\nconst CheckIcon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2.5px;\n`;\n\nconst CheckboxShapeDiv = styled.div`\n  display: inline-block;\n  width: 28px;\n  height: 28px;\n  border-radius: 3px;\n  border: 1px solid #22a6a2;\n\n  background-color: ${({ isChecked }) => (isChecked ? '#22A6A2' : 'white')};\n\n  ${CheckIcon} {\n    visibility: ${({ isChecked }) => (isChecked ? 'visible' : 'hidden')};\n  }\n`;\n\nconst HiddenCheckboxInput = styled.input.attrs({ type: 'checkbox' })`\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\n\nconst Text = styled.span`\n  margin-left: 12px;\n`;\n\nconst Checkbox = ({ isChecked, children, onChange }) => (\n  <label>\n    <Content>\n      <HiddenCheckboxInput checked={isChecked} onChange={onChange} />\n      <CheckboxShapeDiv isChecked={isChecked}>\n        <CheckIcon viewBox=\"0 0 24 24\">\n          <polyline points=\"21 7 10 18 4 12\" />\n        </CheckIcon>\n      </CheckboxShapeDiv>\n    </Content>\n    {children ? <Text>{children}</Text> : ''}\n  </label>\n);\n\nCheckbox.defaultProps = {\n  isChecked: false,\n};\n\nCheckbox.propTypes = {\n  isChecked: PropTypes.bool,\n  children: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { COLOR } from '../../constants/color';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  height: 67px;\n  border-bottom: 4px solid ${COLOR.GRAY_800};\n  font-size: 32px;\n  text-align: center;\n  font-weight: 600;\n  margin-bottom: 55px;\n`;\n\nconst PageTitle = ({ children }) => <Container>{children}</Container>;\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.span`\n  position: relative;\n\n  &::after {\n    position: absolute;\n    display: inline-block;\n    content: ' ';\n    width: 100%;\n    left: 0px;\n    bottom: 0px;\n    z-index: -1;\n\n    height: ${({ height }) => height || '8px'};\n    background-color: ${({ backgroundColor }) => backgroundColor || 'rgba(42, 193, 188, 0.5)'};\n  }\n`;\n\nconst TextHighlight = ({ children, height, backgroundColor }) => (\n  <Container height={height} backgroundColor={backgroundColor}>\n    {children}\n  </Container>\n);\n\nTextHighlight.propTypes = {\n  children: PropTypes.string,\n  height: PropTypes.string,\n  backgroundColor: PropTypes.string,\n};\n\nexport default TextHighlight;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { COLOR } from '../../constants/color';\nimport Button, { BUTTON_TYPE } from '../button/Button';\nimport PropTypes from 'prop-types';\nimport TextHighlight from '../textHighlight/TextHighlight';\n\nexport const PAYMENT_AMOUNT_TYPE = Object.freeze({\n  SHOPPING_CART: 'SHOPPING_CART',\n  ORDER_PAYMENT: 'ORDER_PAYMENT',\n});\n\nconst paymentAmountText = {\n  SHOPPING_CART: {\n    title: '결제예상금액',\n    content: '결제예상금액',\n  },\n  ORDER_PAYMENT: {\n    title: '결제금액',\n    content: '총 결제금액',\n  },\n};\n\nconst Container = styled.div`\n  width: 448px;\n  height: 318px;\n  border: 1px solid ${COLOR.GRAY_200};\n  padding: 22px 0 35px 0;\n`;\n\nconst Title = styled.span`\n  display: block;\n  border-bottom: 3px solid ${COLOR.GRAY_200};\n  padding: 0 0 19px 30px;\n  font-size: 24px;\n`;\n\nconst TextWrapper = styled.div`\n  display: flex;\n  font-weight: bold;\n  justify-content: space-between;\n  padding: 32px 30px 64px 30px;\n  font-size: 20px;\n`;\n\nconst getButtonText = ({ type, count, price }) => {\n  const buttonTextType = {\n    SHOPPING_CART: `주문하기(${count}개)`,\n    ORDER_PAYMENT: `${price.toLocaleString('ko-KR')}원 결제하기`,\n  };\n\n  return buttonTextType[type];\n};\n\nconst PaymentAmount = ({ type, price, count, onClick }) => (\n  <Container>\n    <Title>{paymentAmountText[type].title}</Title>\n    <div>\n      <TextWrapper>\n        <TextHighlight>{paymentAmountText[type].content}</TextHighlight>\n        <TextHighlight>{price.toLocaleString('ko-KR')}원</TextHighlight>\n      </TextWrapper>\n      <Button styles={{ marginLeft: '30px' }} type={BUTTON_TYPE.MEDIUM} onClick={onClick}>\n        {getButtonText({ type, price, count })}\n      </Button>\n    </div>\n  </Container>\n);\n\nPaymentAmount.propTypes = {\n  type: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  count: PropTypes.number,\n};\n\nexport default PaymentAmount;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { COLOR } from '../../constants/color';\nimport PropTypes from 'prop-types';\nimport { PATH } from '../../constants/path';\n\nexport const SELECTED_PRODUCT_LIST_TYPE = Object.freeze({\n  SHOPPING_CART: 'SHOPPING_CART',\n  ORDER_PAYMENT: 'ORDER_PAYMENT',\n  ORDER_LIST: 'ORDER_LIST',\n});\n\nconst selectedProductStyle = {\n  SHOPPING_CART: {\n    Header: {\n      paddingBottom: '24px',\n      borderBottom: `4px solid ${COLOR.GRAY_200}`,\n      fontSize: '20px',\n    },\n    ListItemWrapper: {\n      padding: '24px 0 12px 0',\n    },\n  },\n  ORDER_PAYMENT: {\n    Header: {\n      paddingBottom: '24px',\n      borderBottom: `4px solid ${COLOR.GRAY_200}`,\n      fontSize: '24px',\n      fontWeight: '500',\n    },\n    ListItemWrapper: {\n      padding: '20px 0',\n    },\n  },\n  ORDER_LIST: {\n    Header: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      padding: '28px 36px',\n      fontSize: '20px',\n      backgroundColor: `#F6F6F6`,\n      borderBottom: `2px solid ${COLOR.GRAY_200}`,\n    },\n    ListItemWrapper: {\n      padding: '38px 0',\n    },\n  },\n};\n\nconst Header = styled.div`\n  ${({ type }) => selectedProductStyle[type].Header}\n`;\n\nconst ListItemWrapper = styled.li`\n  border-bottom: 2px solid ${COLOR.GRAY_200};\n\n  ${({ type }) => selectedProductStyle[type].ListItemWrapper}\n`;\n\nconst getHeader = ({ type, count, orderNumber }) => {\n  const headerType = {\n    SHOPPING_CART: <Header type={type}>든든배송 상품 ({count}개)</Header>,\n    ORDER_PAYMENT: <Header type={type}>주문 상품({count}건)</Header>,\n    ORDER_LIST: (\n      <Header type={type}>\n        <div>주문번호 : {orderNumber}</div>\n        <Link to={PATH.ORDER_LIST_DETAIL}>상세보기 {'>'} </Link>\n      </Header>\n    ),\n  };\n\n  return headerType[type];\n};\n\nconst SelectedProductList = ({ listType, itemType, orderNumber, productList, ListItem }) => (\n  <>\n    {getHeader({ type: listType, count: productList.length, orderNumber })}\n    <ul>\n      {productList.map(({ src, id, alt, name, price, count, isChecked }) => (\n        <ListItemWrapper type={listType} key={id}>\n          <ListItem\n            type={itemType}\n            id={id}\n            src={src}\n            alt={alt}\n            name={name}\n            price={price}\n            count={count}\n            isChecked={isChecked}\n          />\n        </ListItemWrapper>\n      ))}\n    </ul>\n  </>\n);\n\nSelectedProductList.propTypes = {\n  listType: PropTypes.string.isRequired,\n  itemType: PropTypes.string,\n  orderNumber: PropTypes.number,\n  productList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      src: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      alt: PropTypes.string.isRequired,\n      count: PropTypes.number.isRequired,\n      isChecked: PropTypes.bool,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default SelectedProductList;\n","export default __webpack_public_path__ + \"static/media/trashCan.30f7dcf7.svg\";","export default __webpack_public_path__ + \"static/media/upArrow.914e96e2.svg\";","export default __webpack_public_path__ + \"static/media/downArrow.de6876af.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport upArrow from '../../assets/upArrow.svg';\nimport downArrow from '../../assets/downArrow.svg';\nimport { COLOR } from '../../constants/color';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  position: relative;\n  left: -42px;\n\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  input[type='number']:disabled {\n    background-color: ${COLOR.WHITE};\n  }\n\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`;\n\nconst NumberInput = styled.input.attrs({ type: 'number' })`\n  font-size: 24px;\n  width: 72px;\n  height: 60px;\n  line-height: 1.5;\n  float: left;\n  display: block;\n  padding: 0;\n  margin: 0;\n  border: 1px solid ${COLOR.GRAY_200};\n  text-align: center;\n\n  &:focus {\n    outline: 0;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  float: left;\n  position: relative;\n  height: 60px;\n`;\n\nconst StyledButton = styled.div`\n  position: relative;\n  cursor: pointer;\n  width: 42px;\n  text-align: center;\n  line-height: 1.5;\n  user-select: none;\n  border-color: ${COLOR.GRAY_200};\n  border-style: solid;\n  border-width: 0;\n`;\n\nconst Increment = styled(StyledButton)`\n  position: absolute;\n  height: 50%;\n  top: 0;\n  border-width: 1px 1px 0 0;\n`;\n\nconst Decrement = styled(StyledButton)`\n  position: absolute;\n  bottom: 0;\n  height: 50%;\n  border-width: 1px 1px 1px 0;\n`;\n\nconst CountInput = ({ value, onIncrease, onDecrease }) => (\n  <Container>\n    <NumberInput value={value} disabled />\n    <ButtonWrapper>\n      <Increment onClick={onIncrease}>\n        <img src={upArrow} alt=\"증가\" />\n      </Increment>\n      <Decrement onClick={onDecrease}>\n        <img src={downArrow} alt=\"감소\" />\n      </Decrement>\n    </ButtonWrapper>\n  </Container>\n);\n\nCountInput.propTypes = {\n  value: PropTypes.number.isRequired,\n  onIncrease: PropTypes.func,\n  onDecrease: PropTypes.func,\n};\n\nexport default CountInput;\n","import ReactDOM from 'react-dom';\n\nconst DialogPortal = ({ children }) => {\n  return ReactDOM.createPortal(children, document.getElementById('dialog'));\n};\n\nexport default DialogPortal;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport DialogPortal from '../../DialogPortal';\n\nexport const DIALOG_TYPE = Object.freeze({\n  ALERT: 'ALERT',\n  CONFIRM: 'CONFIRM',\n});\n\nconst Container = styled.div`\n  display: flex;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 100;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  box-shadow: 5px 5px 20px 0 rgb(0 0 0 / 50%);\n  width: 304px;\n  border-radius: 5px;\n  background-color: white;\n  line-height: 1.33333;\n  letter-spacing: -0.6px;\n\n  & button {\n    width: ${({ type }) => (type === DIALOG_TYPE.ALERT ? '100%' : '50%')};\n    height: 60px;\n    border-top: 1px solid rgb(221, 221, 221);\n    cursor: pointer;\n\n    &:hover {\n      background-color: rgb(246, 246, 246);\n    }\n  }\n`;\n\nconst TextWrapper = styled.section`\n  padding: 40px 28px;\n`;\n\nconst CancelButton = styled.button`\n  border: none;\n  border-right: 1px solid rgb(221, 221, 221);\n`;\n\nconst ConfirmButton = styled.button`\n  border: none;\n  font-weight: 600;\n`;\n\nconst getButton = ({ type, onConfirm, onCancel }) => {\n  const dialogType = {\n    ALERT: <ConfirmButton onClick={onConfirm}>확인</ConfirmButton>,\n    CONFIRM: (\n      <>\n        <CancelButton onClick={onCancel}>취소</CancelButton>\n        <ConfirmButton onClick={onConfirm}>확인</ConfirmButton>\n      </>\n    ),\n  };\n\n  return dialogType[type];\n};\n\nconst Dialog = ({ children, type, onConfirm, onCancel }) => (\n  <DialogPortal>\n    <Container>\n      <Content type={type}>\n        <TextWrapper>{children}</TextWrapper>\n        <section>{getButton({ type, onConfirm, onCancel })}</section>\n      </Content>\n    </Container>\n  </DialogPortal>\n);\n\nDialog.defaultProps = {\n  type: DIALOG_TYPE.CONFIRM,\n};\n\nDialog.propTypes = {\n  children: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onConfirm: PropTypes.func,\n  onCancel: PropTypes.func,\n};\n\nexport default Dialog;\n","import React, { useState } from 'react';\n\nconst useDialog = () => {\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [type, setType] = useState(null);\n\n  const clickConfirm = (callback) => {\n    setIsDialogOpen(false);\n    setType(null);\n    callback && callback();\n  };\n\n  const clickCancel = () => {\n    setIsDialogOpen(false);\n    setType(null);\n  };\n\n  return { isDialogOpen, setIsDialogOpen, clickConfirm, clickCancel, type, setType };\n};\n\nexport default useDialog;\n","import React from 'react';\nimport Checkbox from '../checkbox/Checkbox';\nimport ProductImage, { PRODUCT_IMAGE_TYPE } from '../productImage/ProductImage';\nimport trashCan from '../../assets/trashCan.svg';\nimport styled from 'styled-components';\nimport CountInput from '../countInput/CountInput';\nimport { useDispatch } from 'react-redux';\nimport {\n  decreaseCount,\n  deleteShoppingCartItem,\n  increaseCount,\n  toggleShoppingCartItem,\n} from '../../modules/shoppingCart';\nimport PropTypes from 'prop-types';\nimport DialogPortal from '../../DialogPortal';\nimport Dialog, { DIALOG_TYPE } from '../dialog/Dialog';\nimport useDialog from '../../hooks/useDialog';\n\nconst Container = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  width: 731px;\n  height: 156px;\n`;\n\nconst LeftContent = styled.li`\n  display: flex;\n  & > *:not(:first-child) {\n    margin-left: 15px;\n  }\n`;\n\nconst RightContent = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  padding-bottom: 5px;\n`;\n\nconst Name = styled.div`\n  font-size: 20px;\n`;\n\nconst TrashCanImage = styled.img`\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n`;\n\nconst ShoppingCartItem = ({ id, src, alt, name, price, isChecked, count }) => {\n  const { isDialogOpen, setIsDialogOpen, clickConfirm, clickCancel, type, setType } = useDialog();\n\n  const dispatch = useDispatch();\n\n  const handleShoppingCartItemToggle = () => {\n    dispatch(toggleShoppingCartItem(id));\n  };\n\n  const handleShoppingCartItemDelete = () => {\n    setIsDialogOpen(true);\n    setType(DIALOG_TYPE.CONFIRM);\n  };\n\n  const handleConfirm = () => {\n    type === DIALOG_TYPE.CONFIRM ? clickConfirm(dispatch.bind(null, deleteShoppingCartItem(id))) : clickConfirm();\n  };\n\n  const handleCancel = () => {\n    clickCancel();\n  };\n\n  const handleIncrement = () => {\n    if (count >= 99) {\n      setIsDialogOpen(true);\n      setType(DIALOG_TYPE.ALERT);\n\n      return;\n    }\n\n    dispatch(increaseCount(id));\n  };\n\n  const handleDecrement = () => {\n    count > 1 && dispatch(decreaseCount(id));\n  };\n\n  return (\n    <>\n      <Container>\n        <LeftContent>\n          <Checkbox isChecked={isChecked} onChange={handleShoppingCartItemToggle} />\n          <ProductImage type={PRODUCT_IMAGE_TYPE.SMALL} src={src} alt={alt} />\n          <Name>{name}</Name>\n        </LeftContent>\n        <RightContent>\n          <TrashCanImage onClick={handleShoppingCartItemDelete} src={trashCan} alt=\"쓰레기통\" />\n          <CountInput value={count} onIncrease={handleIncrement} onDecrease={handleDecrement} />\n          <div>{(count * price).toLocaleString('ko-KR')} 원</div>\n        </RightContent>\n      </Container>\n\n      {isDialogOpen && (\n        <DialogPortal>\n          {type === DIALOG_TYPE.CONFIRM && (\n            <Dialog type={type} onConfirm={handleConfirm} onCancel={handleCancel}>\n              <p>\n                해당 상품을 <br /> 삭제하시겠습니까?\n              </p>\n            </Dialog>\n          )}\n\n          {type === DIALOG_TYPE.ALERT && (\n            <Dialog type={type} onConfirm={handleConfirm}>\n              <p>\n                구매 수량 안내 <br /> 최대 99개까지 구매가 가능합니다.\n              </p>\n            </Dialog>\n          )}\n        </DialogPortal>\n      )}\n    </>\n  );\n};\n\nShoppingCartItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  isChecked: PropTypes.bool.isRequired,\n  count: PropTypes.number.isRequired,\n};\n\nexport default ShoppingCartItem;\n","export default __webpack_public_path__ + \"static/media/empty-cart.0d66f9ab.png\";","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport Button, { BUTTON_TYPE } from '../components/button/Button';\nimport Checkbox from '../components/checkbox/Checkbox';\nimport PageTitle from '../components/pageTitle/PageTitle';\nimport PaymentAmount, { PAYMENT_AMOUNT_TYPE } from '../components/paymentAmount/PaymentAmount';\nimport SelectedProductList, { SELECTED_PRODUCT_LIST_TYPE } from '../components/selectedProductList/SelectedProductList';\nimport ShoppingCartItem from '../components/shoppingCartItem/ShoppingCartItem';\nimport { deleteCheckedShoppingCartList, toggleAllShoppingCartItem } from '../modules/shoppingCart';\nimport emptyCart from '../assets/empty-cart.png';\nimport { Link } from 'react-router-dom';\nimport { PATH } from '../constants/path';\nimport Dialog, { DIALOG_TYPE } from '../components/dialog/Dialog';\nimport useDialog from '../hooks/useDialog';\n\nconst ImageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  align-items: center;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n`;\n\nconst EmptyCartImage = styled.img`\n  width: 50%;\n`;\n\nconst EmptyCartText = styled.div`\n  font-size: 20px;\n  margin-top: 20px;\n`;\n\nconst Content = styled.section`\n  position: relative;\n  display: flex;\n  padding: 0 18px;\n  gap: 100px;\n`;\n\nconst ShoppingCartItemModification = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 26px;\n`;\n\nconst PaymentAmountWrapper = styled.div`\n  position: sticky;\n  margin-top: 50px;\n  top: 50px;\n`;\n\nconst getExpectedPaymentAmount = (checkedShoppingCartList) =>\n  checkedShoppingCartList.reduce((acc, cur) => acc + cur.price * cur.count, 0);\n\nconst ShoppingCart = () => {\n  const { isDialogOpen, setIsDialogOpen, clickConfirm, clickCancel } = useDialog();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isChecked = useSelector((state) => state.shoppingCart.isAllShoppingCartItemChecked);\n  const shoppingCartList = useSelector((state) => state.shoppingCart.shoppingCartList);\n  const checkedShoppingCartList = shoppingCartList.filter((item) => item.isChecked);\n\n  const totalPrice = getExpectedPaymentAmount(checkedShoppingCartList);\n\n  const handleAllShoppingCartItemToggle = () => {\n    dispatch(toggleAllShoppingCartItem());\n  };\n\n  const handleConfirm = () => {\n    clickConfirm(dispatch.bind(null, deleteCheckedShoppingCartList(checkedShoppingCartList)));\n  };\n\n  const handleCancel = () => {\n    clickCancel();\n  };\n\n  const handleCheckedShoppingCartListDelete = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleOrderPaymentPageRouter = () => {\n    history.push(PATH.ORDER_PAYMENT, {\n      orderPaymentList: checkedShoppingCartList,\n      totalPrice,\n    });\n  };\n\n  if (!shoppingCartList.length) {\n    return (\n      <ImageWrapper>\n        <EmptyCartImage src={emptyCart} alt=\"빈 장바구니\" />\n        <EmptyCartText>장바구니에 담긴 상품이 없습니다.</EmptyCartText>\n        <Link to={PATH.PRODUCT_LIST}>\n          <Button type={BUTTON_TYPE.MEDIUM} styles={{ fontWeight: 500, marginTop: '30px' }}>\n            상품목록으로 가기\n          </Button>\n        </Link>\n      </ImageWrapper>\n    );\n  }\n\n  return (\n    <>\n      <PageTitle>장바구니</PageTitle>\n      <Content>\n        <div>\n          <ShoppingCartItemModification>\n            <Checkbox isChecked={isChecked} onChange={handleAllShoppingCartItemToggle}>\n              {isChecked ? '선택해제' : '전체선택'}\n            </Checkbox>\n            <Button\n              onClick={handleCheckedShoppingCartListDelete}\n              type={BUTTON_TYPE.X_SMALL}\n              disabled={!checkedShoppingCartList.length}\n            >\n              상품삭제\n            </Button>\n          </ShoppingCartItemModification>\n          <SelectedProductList\n            listType={SELECTED_PRODUCT_LIST_TYPE.SHOPPING_CART}\n            productList={shoppingCartList}\n            ListItem={ShoppingCartItem}\n          />\n        </div>\n        <div>\n          <PaymentAmountWrapper>\n            <PaymentAmount\n              type={PAYMENT_AMOUNT_TYPE.SHOPPING_CART}\n              price={totalPrice}\n              count={checkedShoppingCartList.length}\n              onClick={handleOrderPaymentPageRouter}\n            />\n          </PaymentAmountWrapper>\n        </div>\n      </Content>\n\n      {isDialogOpen && (\n        <Dialog type={DIALOG_TYPE.CONFIRM} onConfirm={handleConfirm} onCancel={handleCancel}>\n          <p>\n            선택한 {checkedShoppingCartList.length}개의 상품을 <br /> 모두 삭제하시겠습니까?\n          </p>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default ShoppingCart;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button, { BUTTON_TYPE } from '../button/Button';\nimport ProductImage, { PRODUCT_IMAGE_TYPE } from '../productImage/ProductImage';\nimport { COLOR } from '../../constants/color';\nimport PropTypes from 'prop-types';\n\nexport const ORDER_LIST_ITEM_TYPE = Object.freeze({\n  ORDER_PAYMENT: 'ORDER_PAYMENT',\n  ORDER_LIST: 'ORDER_LIST',\n});\n\nconst orderListItemStyle = {\n  ORDER_PAYMENT: {\n    Container: { width: '731px' },\n    TextWrapper: { marginLeft: '18px' },\n  },\n  ORDER_LIST: {\n    TextWrapper: { marginLeft: '33px' },\n    Info: { color: COLOR.GRAY_600 },\n  },\n};\n\nconst Container = styled.div`\n  display: flex;\n  padding: 0 24px;\n\n  ${({ type }) => orderListItemStyle[type].Container};\n`;\n\nconst TextWrapper = styled.div`\n  ${({ type }) => orderListItemStyle[type].TextWrapper}\n`;\n\nconst Name = styled.div`\n  font-size: 20px;\n  margin-bottom: 15px;\n\n  ${({ type }) => orderListItemStyle[type].Name}\n`;\n\nconst Info = styled.div`\n  ${({ type }) => orderListItemStyle[type].Info}\n`;\n\nconst getInfo = ({ type, count, price }) => {\n  const infoType = {\n    ORDER_PAYMENT: <Info type={type}>수량: {count}</Info>,\n    ORDER_LIST: (\n      <Info type={type}>\n        {price.toLocaleString('ko-KR')}원 / 수량: {count}개\n      </Info>\n    ),\n  };\n\n  return infoType[type];\n};\n\nconst getFloatingButton = ({ type }) => {\n  const buttonType = {\n    ORDER_PAYMENT: null,\n    ORDER_LIST: (\n      <div style={{ marginLeft: 'auto' }}>\n        <Button type={BUTTON_TYPE.SMALL}>장바구니</Button>\n      </div>\n    ),\n  };\n\n  return buttonType[type];\n};\n\nconst OrderListItem = ({ type, src, alt, name, count, price }) => (\n  <Container type={type}>\n    <ProductImage type={PRODUCT_IMAGE_TYPE.SMALL} src={src} alt={alt} />\n    <TextWrapper type={type}>\n      <Name type={type}>{name}</Name>\n      {getInfo({ type, count, price })}\n    </TextWrapper>\n    {getFloatingButton({ type })}\n  </Container>\n);\n\nOrderListItem.propTypes = {\n  type: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  count: PropTypes.number.isRequired,\n  price: PropTypes.number.isRequired,\n};\n\nexport default OrderListItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PageTitle from '../components/pageTitle/PageTitle';\nimport OrderListItem, { ORDER_LIST_ITEM_TYPE } from '../components/orderListItem/OrderListItem';\nimport SelectedProductList, { SELECTED_PRODUCT_LIST_TYPE } from '../components/selectedProductList/SelectedProductList';\nimport { COLOR } from '../constants/color';\nimport { useSelector } from 'react-redux';\n\nconst OrderItemListWrapper = styled.li`\n  border: 2px solid ${COLOR.GRAY_200};\n  margin-bottom: 76px;\n  border-bottom: none;\n`;\n\nconst OrderList = () => {\n  const orderItemList = useSelector((state) => state.orderList.orderItemList);\n\n  return (\n    <>\n      <PageTitle>주문목록</PageTitle>\n      <ul>\n        {orderItemList.map((orderItem) => (\n          <OrderItemListWrapper key={orderItem.orderNumber}>\n            <SelectedProductList\n              listType={SELECTED_PRODUCT_LIST_TYPE.ORDER_LIST}\n              itemType={ORDER_LIST_ITEM_TYPE.ORDER_LIST}\n              productList={orderItem.itemList}\n              orderNumber={orderItem.orderNumber}\n              ListItem={OrderListItem}\n            />\n          </OrderItemListWrapper>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default OrderList;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    margin: 0;\n    color: #333333;\n    font-family: 'Noto Sans KR', sans-serif;\n    height: 100%;\n  }\n\n  ul {\n    padding: 0;\n    margin: 0;\n    list-style: none;\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  button {\n    padding: 0;\n    color: inherit;\n    font-size: inherit;\n    font-family: inherit;\n    background-color: inherit;\n  }\n`;\n\nexport default GlobalStyle;\n","import { API_PATH, RETURN_TYPE } from '../constants/api';\nimport { httpClient } from '../request/httpClient';\n\nconst FETCH_ORDER_ITEM_LIST = 'orderList/FETCH_ORDER_ITEM_LIST';\nconst INSERT_ORDER_ITEM_LIST = 'orderList/INSERT_ORDER_ITEM_LIST';\n\nexport const insertOrderItemList = (orderItemList) => async (dispatch) => {\n  try {\n    const orderItemData = { orderNumber: new Date().getTime(), itemList: orderItemList };\n\n    await httpClient.post({ path: API_PATH.ORDER_ITEM_LIST, body: orderItemData });\n\n    dispatch({ type: INSERT_ORDER_ITEM_LIST, payload: orderItemData });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchOrderItemList = () => async (dispatch) => {\n  try {\n    const orderItemList = await httpClient.get({ path: API_PATH.ORDER_ITEM_LIST, returnType: RETURN_TYPE.JSON });\n\n    dispatch({ type: FETCH_ORDER_ITEM_LIST, payload: orderItemList });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst initialState = {\n  orderItemList: [],\n};\n\nconst orderList = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ORDER_ITEM_LIST:\n      return {\n        ...state,\n        orderItemList: action.payload.reverse(),\n      };\n    case INSERT_ORDER_ITEM_LIST:\n      return {\n        ...state,\n        orderItemList: [action.payload, ...state.orderItemList],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default orderList;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport styled from 'styled-components';\nimport OrderListItem, { ORDER_LIST_ITEM_TYPE } from '../components/orderListItem/OrderListItem';\nimport PageTitle from '../components/pageTitle/PageTitle';\nimport PaymentAmount, { PAYMENT_AMOUNT_TYPE } from '../components/paymentAmount/PaymentAmount';\nimport SelectedProductList, { SELECTED_PRODUCT_LIST_TYPE } from '../components/selectedProductList/SelectedProductList';\nimport { PATH } from '../constants/path';\nimport { insertOrderItemList } from '../modules/orderList';\n\nconst Content = styled.section`\n  position: relative;\n  display: flex;\n  margin-top: 25px;\n  padding: 0 18px;\n  gap: 100px;\n`;\n\nconst OrderPaymentAmountWrapper = styled.div`\n  position: sticky;\n  margin-top: 50px;\n  top: 50px;\n`;\n\nconst OrderPayment = () => {\n  const { state } = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { orderPaymentList: orderItemList, totalPrice } = state;\n\n  const handleOrderListPageRouter = async () => {\n    await dispatch(insertOrderItemList(orderItemList));\n\n    history.push(PATH.ORDER_LIST);\n  };\n\n  return (\n    <>\n      <PageTitle>주문/결제</PageTitle>\n      <Content>\n        <div>\n          <SelectedProductList\n            listType={SELECTED_PRODUCT_LIST_TYPE.ORDER_PAYMENT}\n            itemType={ORDER_LIST_ITEM_TYPE.ORDER_PAYMENT}\n            productList={orderItemList}\n            ListItem={OrderListItem}\n          />\n        </div>\n        <div>\n          <OrderPaymentAmountWrapper>\n            <PaymentAmount\n              type={PAYMENT_AMOUNT_TYPE.ORDER_PAYMENT}\n              price={totalPrice}\n              onClick={handleOrderListPageRouter}\n            />\n          </OrderPaymentAmountWrapper>\n        </div>\n      </Content>\n    </>\n  );\n};\n\nexport default OrderPayment;\n","import { API_PATH, RETURN_TYPE } from '../constants/api';\nimport { httpClient } from '../request/httpClient';\n\nconst FETCH_PRODUCT_LIST = 'product/FETCH_PRODUCT_LIST';\n\nexport const fetchProductList = () => async (dispatch) => {\n  try {\n    const productList = await httpClient.get({ path: API_PATH.PRODUCT_LIST, returnType: RETURN_TYPE.JSON });\n\n    dispatch({ type: FETCH_PRODUCT_LIST, payload: productList });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst initialState = {\n  productList: [],\n};\n\nconst product = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_PRODUCT_LIST:\n      return {\n        ...state,\n        productList: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default product;\n","import React from 'react';\n\nconst OrderListDetail = () => <div>OrderListDetail</div>;\n\nexport default OrderListDetail;\n","import React from 'react';\n\nconst ProductDetail = () => <div>ProductDetail</div>;\n\nexport default ProductDetail;\n","import React, { useEffect } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Navigation from './components/navigation/Navigation';\nimport ProductList from './pages/ProductList';\nimport ShoppingCart from './pages/ShoppingCart';\nimport OrderList from './pages/OrderList';\nimport GlobalStyle from './GlobalStyle';\nimport styled from 'styled-components';\nimport OrderPayment from './pages/OrderPayment';\nimport { fetchProductList } from './modules/product';\nimport { useDispatch } from 'react-redux';\nimport { fetchShoppingCartList } from './modules/shoppingCart';\nimport OrderListDetail from './pages/OrderListDetail';\nimport ProductDetail from './pages/ProductDetail';\nimport { fetchOrderItemList } from './modules/orderList';\nimport { PATH } from './constants/path';\n\nconst StyledContents = styled.div`\n  max-width: 1440px;\n  margin: 0 auto;\n  padding: 0 60px;\n  margin-top: 40px;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchProductList());\n    dispatch(fetchShoppingCartList());\n    dispatch(fetchOrderItemList());\n  }, [dispatch]);\n\n  return (\n    <>\n      <GlobalStyle />\n      <Navigation />\n      <StyledContents>\n        <Switch>\n          <Route exact path={PATH.HOME}>\n            <Home />\n          </Route>\n          <Route exact path={PATH.PRODUCT_LIST}>\n            <ProductList />\n          </Route>\n          <Route exact path={PATH.PRODUCT_DETAIL}>\n            <ProductDetail />\n          </Route>\n          <Route exact path={PATH.SHOPPING_CART}>\n            <ShoppingCart />\n          </Route>\n          <Route exact path={PATH.ORDER_PAYMENT}>\n            <OrderPayment />\n          </Route>\n          <Route exact path={PATH.ORDER_LIST}>\n            <OrderList />\n          </Route>\n          <Route exact path={PATH.ORDER_LIST_DETAIL}>\n            <OrderListDetail />\n          </Route>\n          <Redirect exact path=\"*\" to={PATH.HOME} />\n        </Switch>\n      </StyledContents>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport product from './product';\nimport shoppingCart from './shoppingCart';\nimport orderList from './orderList';\n\nconst rootReducer = combineReducers({\n  product,\n  shoppingCart,\n  orderList,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { applyMiddleware, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport App from './App';\nimport rootReducer from './modules';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/react-shopping-cart\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}